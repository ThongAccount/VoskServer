import os
import urllib.request
import zipfile
from flask import Flask, render_template
from flask_sock import Sock
from vosk import Model, KaldiRecognizer

# Kh·ªüi t·∫°o Flask v√† Flask-Sock
app = Flask(__name__)
sock = Sock(app)

# URL m√¥ h√¨nh Vosk ti·∫øng Vi·ªát
MODEL_URL = "https://alphacephei.com/vosk/models/vosk-model-vn-0.4.zip"

# H√†m t·∫£i m√¥ h√¨nh
def download_model():
    print("üìù ƒêang t·∫£i m√¥ h√¨nh t·ª´ URL...")
    try:
        # T·∫£i m√¥ h√¨nh v·ªÅ
        urllib.request.urlretrieve(MODEL_URL, "model.zip")
        print("‚úÖ T·∫£i m√¥ h√¨nh th√†nh c√¥ng!")
        
        # Gi·∫£i n√©n m√¥ h√¨nh
        with zipfile.ZipFile("model.zip", "r") as zip_ref:
            zip_ref.extractall("model")
        
        print("‚úÖ Gi·∫£i n√©n m√¥ h√¨nh th√†nh c√¥ng!")
        os.remove("model.zip")  # X√≥a file zip ƒë√£ t·∫£i
    except Exception as e:
        print(f"‚ùå L·ªói t·∫£i m√¥ h√¨nh: {e}")

# T·∫£i m√¥ h√¨nh khi kh·ªüi ƒë·ªông ·ª©ng d·ª•ng
download_model()

# Kh·ªüi t·∫°o m√¥ h√¨nh Vosk
try:
    model = Model("model")
    recognizer = KaldiRecognizer(model, 16000)
    print("‚úÖ M√¥ h√¨nh Vosk ƒë√£ ƒë∆∞·ª£c t·∫£i th√†nh c√¥ng!")
except Exception as e:
    print(f"‚ùå L·ªói khi t·∫°o m√¥ h√¨nh Vosk: {e}")

@app.route('/')
def index():
    return render_template("index.html")

@sock.route('/ws')
def recognize(ws):
    print("üìù ƒêang ch·ªù d·ªØ li·ªáu t·ª´ WebSocket...")
    audio_data = b""

    try:
        while True:
            data = ws.receive()
            if data:
                audio_data += data  # Th√™m d·ªØ li·ªáu √¢m thanh v√†o bi·∫øn audio_data
                if recognizer.AcceptWaveform(audio_data):
                    result = recognizer.Result()
                    ws.send(result)  # G·ª≠i k·∫øt qu·∫£ v·ªÅ client
                    audio_data = b""  # X√≥a d·ªØ li·ªáu √¢m thanh sau khi nh·∫≠n di·ªán xong
    except Exception as e:
        print(f"‚ùå L·ªói khi x·ª≠ l√Ω WebSocket: {e}")
        ws.close()

if __name__ == '__main__':
    app.run(debug=True, host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))
