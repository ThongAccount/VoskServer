import os
import urllib.request
import zipfile
from flask import Flask
from flask_sock import Sock
from vosk import Model, KaldiRecognizer
import json

app = Flask(__name__)
sock = Sock(app)

MODEL_URL = "https://alphacephei.com/vosk/models/vosk-model-small-vi-0.3.zip"
MODEL_DIR = "model/vosk-model-small-vi-0.3"

def download_model():
    if not os.path.exists(MODEL_DIR):
        os.makedirs(MODEL_DIR)
        print("üìù ƒêang t·∫£i m√¥ h√¨nh t·ª´ URL...")
        # T·∫£i m√¥ h√¨nh zip v·ªÅ
        urllib.request.urlretrieve(MODEL_URL, "model.zip")
        with zipfile.ZipFile("model.zip", "r") as zip_ref:
            zip_ref.extractall(MODEL_DIR)
        os.remove("model.zip")
        print("‚úÖ T·∫£i v√† gi·∫£i n√©n m√¥ h√¨nh th√†nh c√¥ng!")
    else:
        print("‚úÖ M√¥ h√¨nh ƒë√£ c√≥ s·∫µn!")

# T·∫£i m√¥ h√¨nh khi ·ª©ng d·ª•ng kh·ªüi ƒë·ªông
download_model()

# Kh·ªüi t·∫°o m√¥ h√¨nh Vosk
model = Model(MODEL_DIR)

@sock.route('/ws')
def recognize(ws):
    recognizer = KaldiRecognizer(model, 16000)
    
    while True:
        data = ws.receive()
        if data is None:
            break

        # ƒê·∫£m b·∫£o data l√† bytes
        if isinstance(data, str):
            data = data.encode("latin1")  # Gi·∫£i ph√°p an to√†n cho WebSocket g·ª≠i string

        # G·ª≠i k·∫øt qu·∫£ cu·ªëi c√πng ho·∫∑c t·∫°m th·ªùi
        if recognizer.AcceptWaveform(data):
            result = json.loads(recognizer.Result())
            ws.send(json.dumps({"text": result.get("text", "")}))
        else:
            partial = json.loads(recognizer.PartialResult())
            ws.send(json.dumps({"partial": partial.get("partial", "")}))

@app.route('/')
def index():
    return "‚úÖ Vosk WebSocket server is running!"
